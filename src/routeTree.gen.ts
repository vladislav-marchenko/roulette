/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as GiftsRouteImport } from './routes/gifts'
import { Route as BalanceRouteImport } from './routes/balance'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RouletteIdRouteImport } from './routes/roulette/$id'

const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const GiftsRoute = GiftsRouteImport.update({
  id: '/gifts',
  path: '/gifts',
  getParentRoute: () => rootRouteImport,
} as any)
const BalanceRoute = BalanceRouteImport.update({
  id: '/balance',
  path: '/balance',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RouletteIdRoute = RouletteIdRouteImport.update({
  id: '/roulette/$id',
  path: '/roulette/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/balance': typeof BalanceRoute
  '/gifts': typeof GiftsRoute
  '/profile': typeof ProfileRoute
  '/roulette/$id': typeof RouletteIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/balance': typeof BalanceRoute
  '/gifts': typeof GiftsRoute
  '/profile': typeof ProfileRoute
  '/roulette/$id': typeof RouletteIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/balance': typeof BalanceRoute
  '/gifts': typeof GiftsRoute
  '/profile': typeof ProfileRoute
  '/roulette/$id': typeof RouletteIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/balance' | '/gifts' | '/profile' | '/roulette/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/balance' | '/gifts' | '/profile' | '/roulette/$id'
  id: '__root__' | '/' | '/balance' | '/gifts' | '/profile' | '/roulette/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BalanceRoute: typeof BalanceRoute
  GiftsRoute: typeof GiftsRoute
  ProfileRoute: typeof ProfileRoute
  RouletteIdRoute: typeof RouletteIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/gifts': {
      id: '/gifts'
      path: '/gifts'
      fullPath: '/gifts'
      preLoaderRoute: typeof GiftsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/balance': {
      id: '/balance'
      path: '/balance'
      fullPath: '/balance'
      preLoaderRoute: typeof BalanceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/roulette/$id': {
      id: '/roulette/$id'
      path: '/roulette/$id'
      fullPath: '/roulette/$id'
      preLoaderRoute: typeof RouletteIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BalanceRoute: BalanceRoute,
  GiftsRoute: GiftsRoute,
  ProfileRoute: ProfileRoute,
  RouletteIdRoute: RouletteIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
